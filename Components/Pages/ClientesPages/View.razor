@page "/Clientes/View/{ClienteID:int}/{UserID}"

@rendermode InteractiveServer
@inject ClientesService clientesService
@inject NavigationManager navigation

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Authorization
@using VRJewelers.Components.Account
@using VRJewelers.Components.Account.Pages
@using VRJewelers.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using VrJewelers.Models

@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore
@inject SignInManager<ApplicationUser> SignInManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject RoleManager<IdentityRole> RoleManager
@inject AuthenticationStateProvider AuthStateProvider

@attribute [Authorize(Roles = "admin")]

<PageTitle>Ver Cliente | @Cliente.Nombre</PageTitle>
<br />
<br />
<div class="container mb-4">
	<div class="card">
		<div class="text-left">
			<h2 style="background-color:white; padding:5px;"><strong>Detalles del Cliente</strong></h2>
		</div>
	</div>
</div>

<div class="container">
	<div class="card">
		<div class="card-body">

			<div class="d-flex justify-content-center mb-3"><h3><strong>Información del cliente</strong></h3></div>
			<div class="d-flex justify-content-center mb-3">
				<ul>
					<li><strong>ID Cliente:</strong> @ClienteID</li>
					<li><strong>ID Usuario:</strong> @UserID</li>
					<li><strong>Nombre:</strong> @Cliente.Nombre</li>
					<li><strong>Email:</strong> @email</li>
				</ul>
			</div>
			<div class="text-center">
				<a href="/Clientes/Index" class="btn btn-secondary bi bi-arrow-left-circle">   Volver</a>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int ClienteID { get; set; }

	[Parameter]
	public string UserID { get; set; } = null!;

	public Clientes Cliente { get; set; } = new();
	public ApplicationUser user { get; set; } = default!;
	public string? email { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Cliente = await clientesService.Buscar(ClienteID);
		user = await UserManager.FindByIdAsync(UserID);
		email = await UserManager.GetEmailAsync(user);
	}
}